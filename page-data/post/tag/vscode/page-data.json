{"componentChunkName":"component---src-templates-posts-jsx","path":"/post/tag/vscode","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"d1a599fc-7122-5745-b07f-703ef178324a","html":"<h2 id=\"capslock과-control키-바꾸기\" style=\"position:relative;\"><a href=\"#capslock%EA%B3%BC-control%ED%82%A4-%EB%B0%94%EA%BE%B8%EA%B8%B0\" aria-label=\"capslock과 control키 바꾸기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CapsLock과 Control키 바꾸기</h2>\n<p>처음에는 게임과 영화를 보기 위한 용도로 데스크탑을 조립했는데 이제는 개발도구로 사용하고 있다. Window는 터미널을 사용할 때의 제약이 많아 개발할때는 꺼렸는데 wsl의 등장으로 지금은 현업에서도 큰 불편 없이 사용할 수 있는 정도가 되었다.</p>\n<p>특히 vscode의 wsl 플러그인을 사용하면 wsl의 리눅스 파일시스템에 있는 프로젝트들을 마치 호스트의 파일시스템에 있는 것 처럼 사용할 수 있어서 집에서는 이제 맥북으로 개발하지 않을 것 같다. 다만 몇 가지 불편한 부분이 있었다.</p>\n<p>첫번째는 <code class=\"language-text\">Capslock</code>키와 <code class=\"language-text\">Control</code>키의 위치였다. 해피해킹 키보드에 익숙해져 <code class=\"language-text\">Control</code>대신 <code class=\"language-text\">Capslock</code>을 마구 눌러댔다. 윈도우에서 이를 해결할 수 있는 방법은 두가지가 있다. 첫번째로 레지스트리를 수정하는 방법인데. 대부분의 프로그램에서는 잘 동작하지만 특정 게임들 (몬스터 헌터, 토탈워 삼국)에서는 <code class=\"language-text\">Control</code>키를 아예 누를 수 없는 상태가 되어 버린다.</p>\n<p>두 번째는 <a href=\"https://www.autohotkey.com/\">AutoHotKey</a>를 사용하는 것이다. 이 방법으로 지금까지 만족스럽게 사용하고 있다. 사이트에서 프로그램을 설치하고 바탕화면에 우클릭 후 <strong>'새로 만들기'</strong> > <strong>'AutoHotkey Script'</strong>를 선택한 후 생성된 파일에 아래 내용을 붙여 넣고 저장한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">; CapsLock, Control 전환\nCapsLock::Ctrl\nCtrl::CapsLock</code></pre></div>\n<p>다음 해당 파일을 우클릭하여 <strong>'Run Script'</strong>로 실행한다. 시스템 트레이 아이콘에 'H'아이콘이 나타나면 된 것이다. 그럼 이제 <code class=\"language-text\">Capslock</code>과 <code class=\"language-text\">Control</code>이 바뀌었을 것이다. 이 동작은 언제까지나 스크립트가 실행되어 있는 상태만 유효하다.</p>\n<h2 id=\"수정모드를-빠져나갈-때-영문으로-전환하기\" style=\"position:relative;\"><a href=\"#%EC%88%98%EC%A0%95%EB%AA%A8%EB%93%9C%EB%A5%BC-%EB%B9%A0%EC%A0%B8%EB%82%98%EA%B0%88-%EB%95%8C-%EC%98%81%EB%AC%B8%EC%9C%BC%EB%A1%9C-%EC%A0%84%ED%99%98%ED%95%98%EA%B8%B0\" aria-label=\"수정모드를 빠져나갈 때 영문으로 전환하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>수정모드를 빠져나갈 때 영문으로 전환하기</h2>\n<p>이전에 Spacemacs를 사용할 땐 에디터 내장 언어 입력기가 존재하여 수정모드를 빠져나갈 때 자동으로 영문으로 바꿔 주었는데. 이 기능이 정말 편리했다. VSCODE를 사용한 뒤로는 그 기능을 쓸 수 없어 <code class=\"language-text\">Esc</code>로 수정모드를 빠져나온 후 항상 언어 전환 키를 눌러줘야만 했다.</p>\n<p>이 문제를 해결하기 위한 <a href=\"https://github.com/daipeihust/im-select\">설정</a>이 있긴 하지만 이게 IME입력기를 쓰는 환경에서는 잘 동작하지 않는다. 이 문제도 AutoHotKey를 이용해 해결할 수 있었다. 위에서 했던 방법과 마찬가지로 아래 스크립트를 쓰면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">; vscode에서 vim insert 모드 종료시 한글이면 영문으로 전환\n#IfWinActive, ahk_exe Code.exe\nEscape::\n\tif (ImeCheck(&quot;A&quot;) = 1)\n\t\tSend {vk15sc138}\n\tSend {Escape}\nReturn\n#IfWinActive\n\n; 키보드 언어 상태 확인 1이면 한글 0이면 영문\nImeCheck(WinTitle) {\n\tWinGet,hWnd,ID,%WinTitle%\n\tReturn SendImeControl(ImmGetDefaultIMEWnd(hWnd),0x005,&quot;&quot;)\n}\nSendImeControl(DefaultIMEWnd, wParam, lParam) {\n\tDetectSave := A_DetectHiddenWindows\n\tDetectHiddenWindows,ON\n\tSendMessage 0x283, wParam,lParam,,ahk_id %DefaultIMEWnd%\n\tif (DetectSave &lt;&gt; A_DetectHiddenWindows)\n\t\tDetectHiddenWindows,%DetectSave%\n\treturn ErrorLevel\n}\nImmGetDefaultIMEWnd(hWnd) {\n\treturn DllCall(&quot;imm32\\ImmGetDefaultIMEWnd&quot;, Uint,hWnd, Uint)\n}</code></pre></div>\n<p>그럼 이제 매 부팅시마다 위의 스크립트들이 자동실행만 되면 된다. 방법은 스크립트 파일 우클릭 후 <strong>'Compile Script'</strong>를 선택한다. 그럼 같은 경로에 exe파일이 생겼을 것이다. 이제 Window의 시작 버튼에 우클릭 후 <strong>'실행'</strong> 을 열고 거기에 <code class=\"language-text\">shell:startup</code>을 입력하고 <strong>'열기'</strong> 를 누른다.</p>\n<p>그럼 폴더가 하나 뜨는데 여기에 exe파일들을 넣으면 된다. 참고로 위의 두 스크립트를 하나의 파일에 넣어도 된다.</p>","frontmatter":{"categories":["development"],"tags":["vscode","autohotkey"],"title":"Windows에서 VS Code vim플러그인 자동 한영전환"},"fields":{"slug":"/post/Windows에서-VS-Code-vim플러그인-자동-한영전환","date":"2020-03-13T00:00:00.000+09:00"},"headings":[{"value":"CapsLock과 Control키 바꾸기","depth":2},{"value":"수정모드를 빠져나갈 때 영문으로 전환하기","depth":2}]}}]}},"pageContext":{"ids":["d1a599fc-7122-5745-b07f-703ef178324a"],"pageNumber":0,"humanPageNumber":1,"skip":0,"limit":2,"numberOfPages":1,"previousPagePath":"","nextPagePath":""}}}